{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","palabra","target","getGifs","categoria","a","url","fetch","res","json","data","gifs","map","images","id","title","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","img","setTimeout","useFecthGifs","cards","card","GifExpertApp","divRoot","document","querySelector","ReactDOM","render"],"mappings":"6LAKaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAwB5C,OACI,uBAAMC,SAbS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAU,OAAGP,GAAH,mBAAiBO,OACzCN,EAAc,MAOlB,UACI,6BAAKD,IACL,uBACIQ,KAAK,OACLC,MAAOT,EACPU,SAzBY,SAACP,GACrB,IAAMQ,EAASR,EAAES,OAAOH,MAExBR,EAAcU,U,+BCXTE,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,yFAE0EF,EAF1E,sBAGFG,MAAMD,GAHJ,cAGZE,EAHY,gBAICA,EAAIC,OAJL,uBAIXC,EAJW,EAIXA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAS,IAAD,EACxB,MAAO,CACHC,GAAID,EAAOC,GACXC,MAAOF,EAAOE,MACdT,IAAG,UAAEO,EAAOA,cAAT,aAAE,EAAeG,iBAAiBV,QAV3B,kBAcXK,GAdW,4CAAF,sDCAPM,EAAc,SAAC,GAAkB,IAAjBF,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAEhC,OACI,sBAAKY,UAAU,8CAAf,UACG,qBAAKC,IAAKb,EAAKc,IAAKL,IACnB,8BAAMA,IACN,2BCHCM,EAAU,SAAC,GAAiB,IAAhBjB,EAAe,EAAfA,UAAe,ECDb,SAACA,GAAa,IAAD,EAEVf,mBAAS,CAC/BqB,KAAK,GACLY,SAAQ,IAJwB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KA6BpC,OAtBAC,qBAAU,WAENtB,EAAQC,GACHsB,MAAK,SAAAC,GAEFC,YAAW,WAEPJ,EAAS,CACLd,KAAKiB,EACLL,SAAS,MAId,UAKb,CAAClB,IAIImB,EDnBqBM,CAAazB,GAA7B0B,EATwB,EAS7BpB,KAAWY,EATkB,EASlBA,QAIlB,OACI,qCACI,oBAAIJ,UAAU,uCAAd,SAAsDd,IACrDkB,GAAW,cAEJQ,EAAMlB,KAAI,SAACmB,GAAD,OACN,cAAC,EAAD,eAEQA,GADCA,EAAKjB,WEWvBkB,EA/BI,WAAK,IAAD,EAEiB3C,mBAAS,IAF1B,mBAEZQ,EAFY,KAEAT,EAFA,KAUnB,OACI,qCACA,4DACA,cAAC,EAAD,CAAcA,cAAeA,IAE7B,uBAEA,6BAEQS,EAAWe,KAAI,SAAAR,GAAS,OACpB,cAAC,EAAD,CAEIA,UAAWA,GADNA,YCnBvB6B,G,MAAQC,SAASC,cAAc,UAGrCC,IAASC,OACL,cAAC,EAAD,IACAJ,K","file":"static/js/main.9d9ae2fb.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types'\n\n\n\nexport const AddCategory = ({setCategorias}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n\n    const handleInputChange=(e)=>{\n        const palabra= e.target.value;\n\n        setInputValue(palabra);\n    }\n\n\n    const handleSubmit=(e)=>{\n        e.preventDefault();\n        \n        if(inputValue.trim().length>2){\n            \n            setCategorias(categorias=>[inputValue,...categorias]);\n            setInputValue('');\n        }\n        \n\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <h2>{inputValue}</h2>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={ handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes={\n    setCategorias:PropTypes.func.isRequired\n};\n","\n\nexport const getGifs= async (categoria)=>{\n\n    const url=`http://api.giphy.com/v1/gifs/search?api_key=utrsDfOqVrmLr75PrafRFpVioLlv9hFZ&q=${categoria}&limit=10`;\n    const res=await fetch(url);\n    const {data}=await res.json();\n\n    const gifs=data.map(images=>{\n        return {\n            id: images.id,\n            title: images.title,\n            url: images.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n\n}\n","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n\n    return (\n        <div className='card animate__animated animate__slideInDown'>\n           <img src={url} alt={title}></img> \n            <div>{title}</div>\n            <hr/>\n        </div>\n    )\n}\n","import React from 'react'\n// import { getGifs } from '../helpers/getGifs';\nimport { useFecthGifs } from '../hooks/useFecthGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({categoria}) => {\n\n    // const [cards, setCards] = useState([]);\n\n    // useEffect(()=>{\n    //     getGifs(categoria)\n    //         .then(setCards);\n    // }, [categoria]);\n\n    const {data:cards,loading}= useFecthGifs(categoria);\n\n    // console.log(cards, loading);\n\n    return (\n        <>\n            <h1 className='animate__animated animate__headShake'>{categoria}</h1>\n            {loading && 'CARGANDO...'}\n                {\n                    cards.map((card)=>(\n                        <GifGridItem \n                            key={card.id}\n                            {...card}\n                        />\n                    )) \n                }\n        </>\n    )\n}\n\n\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFecthGifs =(categoria)=>{\n\n    const [state, setState] = useState({\n        data:[],\n        loading:true\n    });\n\n    useEffect(()=>{\n\n        getGifs(categoria)\n            .then(img=>{\n\n                setTimeout(() => {\n\n                    setState({\n                        data:img,\n                        loading: false\n                    });\n\n\n                }, 1000);\n\n            })\n\n\n    },[categoria]);\n\n\n\n    return state;\n\n\n}","\nimport React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp=()=>{\n\n    const [categorias, setCategorias] = useState([]);\n\n  /*  const handleAdd=()=>{\n        const anime='Udemy';\n        \n        setCategorias([...categorias, anime]);\n    }\n*/\n    return(\n        <>\n        <h2>¿QUÉ ESTAS BUSCANDO?</h2>\n        <AddCategory  setCategorias={setCategorias} />\n\n        <hr/>\n\n        <ol>\n            {\n                categorias.map(categoria =>(\n                    <GifGrid\n                        key={categoria} \n                        categoria={categoria}\n                    />\n                ))\n            }\n        </ol>\n        </>\n    );\n}\n\nexport default GifExpertApp;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nconst divRoot=document.querySelector('#root');\n\n\nReactDOM.render(\n    <GifExpertApp />, \n    divRoot\n);\n\n\n"],"sourceRoot":""}